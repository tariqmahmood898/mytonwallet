@use "../../styles/mixins";

.wrapper {
  height: 100%;

  :global(html.with-safe-area-top) & {
    --header-padding-top: 0.75rem;
  }

  @include mixins.respond-below(xs) {
    // Fix for Opera, dead zone of 37 pixels in extension window on Windows
    :global(html.is-windows.is-opera.is-extension) & {
      --header-padding-top: 2.3125rem;
    }
  }
}

.slide {
  display: flex;
  flex-direction: column;

  width: 100%;
  height: 100%;
  min-height: 0;
  max-height: 100%;
  margin: 0 auto;
  padding-top: var(--safe-area-top);

  &:not(:global(.Transition_slide-from)):not(:global(.Transition_slide-to)) {
    position: relative;
  }

  .modalDialog & {
    --safe-area-top: 0;
  }

  & > & {
    --safe-area-top: 0px;

    & > .header {
      :global(html.is-mobile-telegram-app.is-fullscreen) & {
        top: calc(0px - var(--header-padding-top) - var(--header-title-height));
        padding-top: 0 !important;
      }
    }
  }

  &.withTopSpace {
    padding-top: calc(var(--header-padding-top) + var(--header-title-height) + var(--header-padding-bottom) + var(--safe-area-top) + 0.75rem);

    :global(html.is-mobile-telegram-app.is-fullscreen) & {
      padding-top: calc(var(--safe-area-top) + 0.75rem);
    }
  }
}

.nestedTransition {
  --safe-area-top: 0px;
}

.transitionContainer {
  background-color: var(--color-background-second);
}

.developerCloseButton {
  min-width: 9.25rem !important;
  margin: -0.5rem auto 0;
}

.header {
  display: grid;
  grid-auto-columns: 1fr;
  grid-template-columns: 1fr max-content 1fr;
  align-items: center;

  width: 100%;
  padding: var(--header-padding-top) 0.125rem var(--header-padding-bottom);

  font-size: 1.0625rem;
  font-weight: 700;
  line-height: 1.0625rem;

  transition: background-color 300ms;

  &.onlyTextHeader {
    grid-template-columns: unset;
  }

  :global(html.animation-level-0) & {
    transition: none !important;
  }

  @include mixins.respond-below(xs) {
    position: absolute !important;
    z-index: 2;
    top: 0;
    left: 0;

    width: 100%;
    padding-top: calc(var(--header-padding-top) + var(--safe-area-top));

    &:global(.is-scrolled) {
      @supports (backdrop-filter: saturate(180%) blur(20px)) {
        background-color: var(--color-background-tab-bar);
        backdrop-filter: saturate(180%) blur(20px);
      }
    }
  }

  :global(html.is-mobile-telegram-app.is-fullscreen) & {
    padding-top: calc(var(--tg-safe-area-inset-top) + var(--header-title-height));
  }
}

.headerInsideModal {
  padding: 1.5rem 0.25rem 1.25rem;
}

.languageHeader {
  grid-template-columns: 0.85fr 1fr 0.85fr;
}

.headerBack {
  cursor: var(--custom-cursor, pointer);

  display: flex;
  align-items: center;

  height: var(--header-title-height);
  padding: 0.0625rem 0.375rem;

  font-size: 1.0625rem;
  color: var(--color-accent);

  :global(html.is-telegram-app) &:not(.isInsideModal) {
    visibility: hidden;
  }

  &.hidden {
    visibility: hidden;
  }
}

.iconChevron {
  font-size: 1.5rem;
}

.headerBackInContent {
  position: absolute;
  top: 1.125rem;
  left: 0.125rem;
}

.headerTitle {
  display: flex;
  justify-content: center;

  padding: 0 0.5rem;

  line-height: var(--header-title-height);
  color: var(--color-black)
}

.modalHeader {
  min-height: 4rem;
}

.content {
  overflow-x: hidden;
  overflow-y: scroll;
  display: flex;
  flex-direction: column;

  height: 100%;
  min-height: 0;
  padding: 0.75rem 1rem max(var(--safe-area-bottom), 1rem);

  @include mixins.adapt-padding-to-scrollbar(1rem);

  &_noScroll {
    overflow: visible;
  }

  &.noTitle {
    --header-title-height: -1rem;
  }

  @include mixins.respond-below(xs) {
    padding-top: calc(var(--header-padding-top) + var(--header-title-height) + var(--header-padding-bottom) + 0.75rem);

    :global(html.is-mobile-telegram-app.is-fullscreen) & {
      padding-top: 0.75rem;
    }
  }

  @include mixins.respond-below(xs) {
    &.withBottomSpace {
      padding-bottom: calc(max(var(--safe-area-bottom), 1rem) + var(--bottombar-height) + 1rem);
    }
  }
}

.contentInModal {
  height: auto;
}

.contentFullSize {
  overflow: visible;
  align-items: center;
  padding: 0 !important;
}

.blockTitle {
  margin-bottom: 0.5rem;
  padding: 0 0.5rem;

  font-size: 0.8125rem;
  font-weight: 700;
  line-height: 1.125rem;
  color: var(--color-gray-2);

  :global(html.is-macos) &,
  :global(html.is-ios) & {
    padding: 0 1rem;
    font-weight: 600;
    text-transform: uppercase;
  }
}

.menuIcon {
  width: 1.75rem;
  height: 1.75rem;
}

.themeWrapper {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 1rem 1rem 0.75rem;
}

.theme {
  cursor: var(--custom-cursor, pointer);

  display: flex;
  flex-direction: column;
  gap: 0.5rem;
  align-items: center;

  font-size: 0.875rem;
  font-weight: 600;
  line-height: 1rem;
  color: var(--color-black);

  &_active {
    pointer-events: none;
    font-weight: 700;
    color: var(--color-accent);
  }
}

.themeIcon {
  &::after {
    content: '';

    position: absolute;
    top: 0;
    left: 0;

    display: block;

    width: 100%;
    height: 100%;
    border: none;
    border-radius: 0.75rem;

    opacity: 0;
    box-shadow: 0 0 0 0.05rem var(--color-accent),
          inset 0 0 0 0.0625rem var(--color-accent),
          inset 0 0 0 0.2rem var(--color-background-first);

    transition: opacity 300ms;
  }

  &_active::after {
    opacity: 1;
  }
}

.themeImg {
  width: 6rem;
  height: 7rem;
}

.colorList {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(1.875rem, 2rem));
  gap: 0.75rem;
  justify-content: space-around;
  justify-items: center;

  padding: 0.75rem 1rem;
}

.colorButton {
  --spinner-size: 1.25rem;

  cursor: var(--custom-cursor, pointer);

  display: flex;
  align-items: center;
  justify-content: center;

  width: 1.875rem;
  height: 1.875rem;
  padding: 0;
  border: 0.125rem solid var(--current-accent-color, var(--color-default-accent));
  border-radius: 50%;

  background-color: var(--current-accent-color, var(--color-default-accent));

  transition: border-color 200ms, outline 200ms;

  :global(html.animation-level-0) & {
    transition: none !important;
  }
}

.colorButtonCurrent {
  pointer-events: none;
  border-color: var(--color-background-first);
  outline: 0.125rem solid var(--current-accent-color, var(--color-default-accent));
}

.iconLock {
  font-size: 1.25rem;
  line-height: 1;
  color: var(--color-card-second-text);
  opacity: 0.6;
}

.iconLockInverted {
  color: #000;
}

.subBlockAsButton {
  cursor: var(--custom-cursor, pointer);

  position: relative;

  padding: 0.8125rem 1rem 0.75rem;

  font-size: 1rem;
  color: var(--color-accent);

  transition: color 150ms;

  &:active {
    color: var(--color-accent-button-background-hover);
  }

  @media (hover: hover) {
    &:hover,
    &:focus-visible {
      color: var(--color-accent-button-background-hover);
    }
  }

  :global(html.animation-level-0) & {
    transition: none !important;
  }

  &::before {
    content: '';

    position: absolute;
    top: 0;
    right: 0;
    left: 1rem;

    height: 0.0625rem;

    box-shadow: inset 0 -0.025rem 0 0 var(--color-separator);
  }
}

.block {
  margin-bottom: 1.25rem;
  border-radius: var(--border-radius-default);
  background: var(--color-background-first);
}

.text:last-of-type,
.settingsBlockWithDescription {
  margin-bottom: 0;
}

.settingsBlock {
  margin-bottom: 2rem;
  border-radius: var(--border-radius-default);
  background: var(--color-background-first);

  &:last-child {
    margin-bottom: 0;
  }

  &_text {
    padding: 1rem;
  }
}

.iconChevronRight,
.iconQuestion {
  color: var(--color-gray-3);
}

.item {
  --offset-y-value: 0.75rem;

  cursor: var(--custom-cursor, pointer);

  position: relative;

  display: grid;
  grid-auto-columns: 1fr;
  grid-template-areas: "icon content arrow";
  grid-template-columns: min-content 1fr min-content;
  grid-template-rows: 1fr;
  gap: 0.75rem;
  align-items: center;

  padding: 0.625rem 0.75rem 0.625rem 0.625rem;

  font-size: 1rem;
  font-weight: 600;
  line-height: 1rem;
  color: var(--color-black);
  text-decoration: none !important;

  transition: background-color 200ms, border-radius 200ms;

  :global(html.animation-level-0) & {
    transition: none !important;
  }

  &.draggable {
    grid-template-columns: min-content min-content 1fr min-content;
  }

  @include mixins.separatorBottomSettings(3.125rem, 0);

  &_red {
    color: var(--color-red);
  }

  &_small {
    grid-template-areas: "content action";
    grid-template-columns: 1fr min-content;
    padding: 1rem;

    @include mixins.separatorBottomSettings(1rem, 0);
  }

  &_lang {
    grid-template-areas: "content arrow";
    grid-template-columns: 1fr min-content;
    padding: 0.8125rem 0.75rem 0.75rem 1rem;

    @include mixins.separatorBottomSettings(1rem, 0);
  }

  &_wallet_version {
    grid-template-areas: "content info arrow";
    grid-template-columns: min-content 1fr min-content;
    gap: 0;
    align-items: flex-start;
    justify-content: flex-start;

    padding: 0.9375rem 0.5rem 1rem 1rem;

    @include mixins.separatorBottomSettings(1rem, 1.5rem);
  }

  &_token {
    overflow: hidden;
    height: 4rem;
    padding: 0.6875rem 1rem;

    @include mixins.separatorBottomSettings(4rem, 0);
  }

  &_disabled {
    pointer-events: none;
    cursor: not-allowed !important;
    opacity: 0.4;
  }

  @media (hover: hover) {
    &:focus-visible,
    &:hover {
      color: var(--color-black);
      background-color: var(--color-interactive-item-hover);
    }
  }

  @media (pointer: coarse) {
    &:active {
      color: var(--color-black);
      background-color: var(--color-interactive-item-hover);
    }
  }

  &:active {
    // Optimization
    transition: none;
  }

  &:first-child {
    border-top-left-radius: var(--border-radius-default);
    border-top-right-radius: var(--border-radius-default);
  }

  &:last-child {
    border-bottom-right-radius: var(--border-radius-default);
    border-bottom-left-radius: var(--border-radius-default);
    box-shadow: none;
  }
}

.itemAutoLock {
  border-radius: 0 0 var(--border-radius-default) var(--border-radius-default) !important;
}

a.item:hover {
  color: var(--color-black);
}

.itemInfo {
  display: flex;
  gap: 0.25rem;
  align-items: center;

  color: var(--color-gray-3);
  white-space: nowrap;
}

.small {
  font-size: 0.8125rem;
}

.version {
  user-select: none;

  margin-top: auto;
  margin-bottom: 0.25rem;
  padding-top: 1.5rem;

  font-size: 0.9375rem;
  font-weight: 600;
  color: var(--color-gray-2);
  text-align: center;

  :global(html.is-ios) & {
    cursor: var(--custom-cursor, pointer);
  }
}

.languageMain {
  font-size: 0.9375rem;
  font-weight: 600;
  line-height: 0.9375rem;
}

.languageNative {
  font-size: 0.75rem;
  font-weight: 600;
  line-height: 0.75rem;
  color: var(--color-gray-2);
}

.wideTooltip {
  max-width: 17.5rem !important;
}

.disconnectButton {
  width: 100%;
  padding: 1rem;
  border-radius: var(--border-radius-default);

  font-size: 1rem;
  font-weight: 600;
  line-height: 1rem;
  color: var(--color-red);
  text-align: left;

  background: var(--color-background-first);

  &:focus-visible,
  &:hover {
    background-color: var(--color-interactive-item-hover);
  }
}

.dapps {
  padding-bottom: max(var(--safe-area-bottom), 1.5rem);

  > .block {
    margin-bottom: 0;
  }
}

.changePasswordButton {
  width: 100%;
  padding: 1rem;
  border-radius: var(--border-radius-default);

  font-size: 1rem;
  font-weight: 600;
  line-height: 1rem;
  color: var(--color-accent);
  text-align: left;

  background: var(--color-background-first);

  &:focus,
  &:hover {
    background-color: var(--color-interactive-item-hover);
  }
}

.passwordFormContent {
  padding: 0 !important;
}

.passwordFormContentInModal {
  padding: 0 1rem 1rem;

  @supports (padding-bottom: var(--safe-area-bottom)) {
    padding-bottom: max(var(--safe-area-bottom), 1rem);
  }

  @include mixins.respond-below(xs) {
    padding-top: calc(var(--header-padding-top) + var(--header-title-height) + var(--header-padding-bottom));
  }
}

.sticker {
  margin: 0 auto 1.25rem;
}

.blockDescription {
  margin: 0.5rem 0 2rem;
  padding: 0 0.5rem;

  font-size: 0.8125rem;
  font-weight: 600;
  color: var(--color-gray-2);
}

.emptyList {
  display: flex;
  flex: 1;
  flex-direction: column;
  align-items: center;

  height: 100%;
  padding-top: 1.875rem;
  padding-bottom: 2rem;

  color: var(--color-gray-2);
}

.emptyListTitle {
  margin: 1.25rem 0 0;
  font-size: 1.0625rem;
  font-weight: 700;
  color: var(--color-black);
}

.dapp:not(:last-of-type)::after {
  content: '';

  position: absolute;
  right: 0;
  bottom: 0;
  left: 3.875rem;

  height: 0.0625rem;

  box-shadow: inset 0 -0.025rem 0 0 var(--color-separator);
}

.backButton {
  width: 10.3125rem;
}

.logo {
  flex-shrink: 0;
  width: 6rem;
  height: 6rem;
  margin: 0 auto 1.25rem;
}

.stickerNativeBiometric {
  margin-top: auto;
}

.pinPadHeader {
  display: flex;
  flex-direction: column;
  gap: 1rem;
  align-items: center;
  justify-content: center;

  margin-top: auto;
}

.pinPadHeaderMinified {
  margin-bottom: 1rem;
}

.pinPadTitle {
  font-size: 1.6875rem;
  font-weight: 800;
  line-height: 1;
  text-align: center;
}

.title {
  margin-bottom: 1.25rem;

  font-size: 1.25rem;
  font-weight: 700;
  line-height: 1.0625rem;
  color: var(--color-black);
  text-align: center;
}

.titleLink {
  display: block;

  margin-top: 0.5rem;

  font-size: 0.875rem;
  font-weight: 500;
  line-height: 1rem;
}

.text {
  margin-bottom: 1.75rem;
  font-size: 1rem;
  font-weight: 500;

  &InChat {
    margin-bottom: 0;

    & + & {
      margin-top: 1rem;
    }
  }
}

.heading {
  display: inline-block;

  font-size: 1rem;
  font-weight: 600;
  line-height: 1.25rem;
  letter-spacing: -0.3px;
  white-space: normal;
}

.separator {
  position: relative;
  height: 0.0625rem;
  margin: 1rem 0;
  border: none;

  @include mixins.separatorBottom();
}

.github {
  font-size: 0.875rem;
  color: #000;
  vertical-align: bottom;

  :global(.theme-dark) & {
    color: #FFF;
  }
}

.telegram {
  position: relative;
  font-size: 0.875rem;
  color: var(--color-accent);
  vertical-align: bottom;

  &::after {
    content: '';

    position: absolute;
    z-index: -1;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);

    width:95%;
    height: 95%;
    border-radius: 50%;

    background: #FFF;
  }
}

.tokenSortIcon {
  cursor: var(--custom-cursor, pointer);
  padding: 0 0.375rem;
  font-size: 1.5rem;
}

.tokenTitle {
  overflow: hidden;

  font-size: 0.9375rem;
  font-weight: 600;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.tokenDescription {
  --border-radius-value: 0.25rem;

  display: flex;
  align-items: center;

  font-size: 0.75rem;
  font-weight: 500;
  color: var(--color-gray-2);
}

.dot {
  display: inline-block;

  width: 0.125rem;
  height: 0.125rem;
  margin: 0 0.25rem;
  border-radius: 50%;

  font-style: normal;
  line-height: 1rem;
  vertical-align: middle;

  background-color: var(--color-gray-2);
}

.dapp,
.themeIcon,
.contentRelative,
.sortableContainer {
  position: relative;
}

.modalDialog {
  // Hidden is needed for animating screen transition on the desktop
  overflow: hidden;
  height: 47rem;

  @supports (height: var(--safe-area-bottom)) {
    html:global(:not(.is-native-bottom-sheet)) {
      height: calc(46rem + var(--safe-area-bottom));
    }
  }
}

.modalDialogWeb {
  height: 38rem;

  @supports (height: var(--safe-area-bottom)) {
    html:global(:not(.is-native-bottom-sheet)) {
      height: calc(38rem + var(--safe-area-bottom));
    }
  }
}

.modalContent {
  overflow: visible;
  height: 100%;
  min-height: 0;
}

.deleteText {
  font-size: 0.75rem;
  font-weight: 600;
  color: var(--color-accent);

  &:hover {
    opacity: 0.8;
  }
}

.languageInfo,
.tokenInfo {
  display: flex;
  flex-direction: column;
  gap: 0.3125rem;
  min-width: 0;
}

.stickerAndTitle {
  display: flex;
  column-gap: 1rem;
  align-items: center;
  margin-bottom: 1.5rem;
}

.sideTitle {
  font-size: 1.6875rem;
  font-weight: 800;
  line-height: 1;
  color: var(--color-black);
}

.blockWalletVersionText {
  display: flex;
  flex-direction: column;
  gap: 0.5625rem;

  margin-bottom: 1.0625rem;
  padding-left: 0.5rem;

  font-size: 0.8125rem;
  font-weight: 600;
  color: var(--color-gray-2);
}

.walletVersionInfo,
.walletVersionInfoRight {
  display: flex;
  flex-direction: column;
  gap: 0.125rem;
}

.walletVersionInfoRight {
  align-items: flex-end;
}

.walletVersionTitle,
.walletVersionTokens {
  font-size: 0.9375rem;
  font-weight: 600;
  color: var(--color-black);
}

.tokenAmount,
.walletVersionAddress {
  white-space: nowrap;
}

.walletVersionTitle {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.walletVersionAddress,
.walletVersionAmount {
  font-size: 0.75rem;
  font-weight: 500;
  color: var(--color-gray-2);
  text-wrap: nowrap;
}

.blockWalletVersionReadMore {
  padding-left: 0.5rem;
  font-size: 0.8125rem;
  font-weight: 600;
  color: var(--color-gray-2);
}

.nftPrimaryCell {
  display: flex;
  flex-direction: column;
  gap: 0.3125rem;
}

.nftName {
  font-size: 0.9375rem;
  font-weight: 600;
  color: var(--color-black-1);
}

.nftCollection {
  font-size: 0.75rem;
  font-weight: 500;
  color: var(--color-gray-2);
}

.nftImage {
  width: 2.625rem;
  height: 2.625rem;
  border-radius: var(--border-radius-normal);
}

.nftButtonUnhide {
  justify-self: end;

  height: unset !important;
  padding: 0.4375rem 0.625rem !important;
  border-radius: 0.875rem !important;

  font-size: 0.875rem !important;
  font-weight: 700 !important;
  line-height: 0.875rem !important;
}

.account {
  transition: opacity 300ms;
}

.accountDisabled {
  opacity: 0.5;
}
