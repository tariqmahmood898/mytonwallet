@use "../../styles/mixins";

.wrapper {
  position: relative;
  margin-bottom: 1.25rem;
}

.input {
  --font-size-scale: 1;
  --input-font-size: 1rem;

  display: block;

  width: 100%;
  height: 3rem;
  padding: 0.5rem 0.75rem;
  border: none;
  border-radius: var(--border-radius-default);

  font-size: calc(var(--input-font-size) * var(--font-size-scale));
  font-weight: 600;
  line-height: 1.25;
  color: var(--color-black);
  overflow-wrap: anywhere;

  -webkit-appearance: none;
  background-color: var(--color-background-first);
  outline: none;

  @include mixins.transition("border-color 150ms, box-shadow 150ms");

  &::placeholder {
    color: var(--color-gray-3);

    @include mixins.transition(color 150ms);
  }

  // Hide hint for Safari password strength meter
  // noinspection CssInvalidPseudoSelector
  &::-webkit-strong-password-auto-fill-button {
    position: absolute;

    overflow: hidden !important;

    width: 0 !important;
    min-width: 0 !important;
    max-width: 0 !important;

    opacity: 0;
    clip: rect(0, 0, 0, 0);
  }

  :global(html:not(.is-ios):not(.is-macos)) & {
    --input-font-size: 0.9375rem;
  }

  &.error,
  &.error:focus {
    --color-separator-input-stroke: transparent;

    box-shadow: inset 0 0 0 0.125rem var(--color-red);

    // noinspection CssInvalidPseudoSelector
    &:autofill,
    &:-webkit-autofill-strong-password,
    &:-webkit-autofill-strong-password-viewable,
    &:-webkit-autofill-and-obscured {
      box-shadow: inset 0 0 0 0.125rem var(--color-red), inset 0 0 0 10rem var(--color-background-first);
    }
  }

  &.disabled {
    cursor: not-allowed !important;
    opacity: 0.6;
  }

  &:focus {
    --color-separator-input-stroke: transparent;

    box-shadow: inset 0 0 0 0.125rem var(--color-accent);

    // noinspection CssInvalidPseudoSelector
    &:autofill,
    &:-webkit-autofill-strong-password,
    &:-webkit-autofill-strong-password-viewable,
    &:-webkit-autofill-and-obscured {
      box-shadow: inset 0 0 0 0.125rem var(--color-accent), inset 0 0 0 10rem var(--color-background-first);
    }
  }

  &:hover,
  &:focus {
    &::placeholder {
      color: var(--color-interactive-input-text-hover-active);
    }
  }

  // Disable yellow highlight on autofill
  // noinspection CssInvalidPseudoSelector
  &:autofill,
  &:-webkit-autofill-strong-password,
  &:-webkit-autofill-strong-password-viewable,
  &:-webkit-autofill-and-obscured {
    box-shadow: inset 0 0 0 10rem var(--color-background-first);
    transition: none !important;

    -webkit-text-fill-color: var(--color-black);
  }

  &_password {
    padding-right: 2.5rem;
  }
}

.rich {
  position: relative;
  overflow: hidden;
  flex: 1 1 auto;

  &:not(:last-child) {
    margin-right: 0.5rem;
  }

  &__value,
  &__placeholder {
    overflow: hidden;

    height: 2.75rem;
    padding: 0.375rem 0 0.375rem 0.625rem;

    line-height: 2rem;
    white-space: nowrap;

    background: none;

    @include mixins.transition(color 150ms);

    /* Fix for ContentEditable multiline "issues" */
    br {
      display: none;
    }

    * {
      display: inline;
      white-space: nowrap;
    }
  }

  &__value {
    &.disabled {
      cursor: default !important;
      opacity: 1;
    }

    &:focus {
      box-shadow: none;
    }
  }

  &__placeholder {
    pointer-events: none;

    position: absolute;
    top: 0;
    left: 0;

    color: var(--color-gray-4);
  }

  &__value:hover + &__placeholder,
  &__value:focus + &__placeholder {
    color: var(--color-interactive-input-text-hover-active);
  }
}

.isLoading {
  color: var(--color-gray-4);
}

.large {
  --input-font-size: 3rem !important;

  height: 3.75rem;
  line-height: 3rem;
}

textarea.input {
  resize: none;
  overflow: hidden;
  padding: 0.875rem 0.75rem 0.8125rem;
  line-height: 1.3125rem;
}

.inputWrapperStatic {
  box-shadow: inset 0 0 0 0.0625rem var(--color-separator-input-stroke);
}

.input__wrapper {
  display: flex;

  max-width: 100%;
  padding: 0.125rem;
  border-radius: var(--border-radius-default);

  background-color: var(--color-background-first);
  outline: none;

  @include mixins.transition(box-shadow 150ms);

  &.error,
  &_hasFocus.error {
    --color-separator-input-stroke: transparent;

    box-shadow: inset 0 0 0 0.125rem var(--color-red);
  }

  &_hasFocus {
    --color-separator-input-stroke: transparent;

    box-shadow: inset 0 0 0 0.125rem var(--color-accent);
  }
}

.visibilityToggle {
  cursor: var(--custom-cursor, pointer);

  position: absolute;
  z-index: 2;
  top: 0.75rem;
  right: 0.75rem;

  padding: 0;
  border: none;

  font-size: 1.5rem;
  line-height: 1;
  color: var(--color-black);

  opacity: 0.5;
  background: none;
  outline: none;

  @include mixins.transition(opacity 150ms);

  &:focus {
    opacity: 1;
  }

  &_push {
    top: auto;
    bottom: 0.5rem;
  }
}

.fractional {
  font-size: max(0.75rem, calc(min(1rem, var(--input-font-size)) * var(--font-size-scale)));
  font-weight: 700;
}

.label {
  cursor: text;

  display: block;

  margin-bottom: 0.5rem;
  padding: 0 0.5rem;

  font-size: 0.8125rem;
  font-weight: 700;
  line-height: 1;
  color: var(--color-accent);
  white-space: nowrap;

  @include mixins.transition(color 150ms);

  &.error {
    color: var(--color-red);
  }

  &_error {
    float: right;
    font-weight: 600;
  }

  &_forPassword {
    position: absolute;
    right: 0;
    bottom: 100%;
  }

  &_errorUnderInput {
    position: absolute;
    right: 0;
    bottom: -1.375rem;
    font-size: 0.75rem;
  }

  &_errorBottom {
    margin-top: 1.25rem;

    font-size: 0.9375rem;
    font-weight: 600;
    line-height: 1.25;
    text-align: center;
    white-space: normal;
  }
}

.swapCorner {
  &::before {
    box-shadow: 0 0 0 0.125rem var(--color-accent) !important;
  }

  &_error {
    &::before {
      box-shadow: 0 0 0 0.125rem var(--color-red) !important;
    }
  }
}

.mask {
  top: 0.375rem !important;
  left: 0.375rem !important;
}

.inputContainer {
  position: relative;
  width: 100%;
}

.input_withValueOverlay {
  &::placeholder {
    opacity: 0;
  }
}

.valueOverlay {
  pointer-events: none;

  position: absolute;
  /* stylelint-disable-next-line plugin/whole-pixel */
  bottom: 0.21875rem;
  left: 0.1875rem;
  transform: translateY(-50%);

  overflow: hidden;

  width: calc(100% - 0.375rem);
  height: auto;
  padding: 0 0.5625rem;

  font-size: 1rem;
  text-overflow: ellipsis;
  white-space: nowrap;

  background-color: var(--color-background-first);

  :global(html:not(.is-ios):not(.is-macos)) & {
    font-size: 0.9375rem;
  }

  &.static {
    bottom: 0.1875rem;
  }
}
