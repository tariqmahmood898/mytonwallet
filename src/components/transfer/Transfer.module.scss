@use "../../styles/mixins";

.modalDialog {
  height: 40.5rem;

  @supports (height: var(--safe-area-bottom)) {
    height: calc(40.5rem + var(--safe-area-bottom));
  }

  :global(.is-native-bottom-sheet) & {
    height: calc(40.5rem + var(--safe-area-bottom, 0rem));
  }
}

.help,
.label {
  padding: 0 0.5rem;
  font-size: 0.8125rem;
  line-height: 0.875rem;
}

.balanceError {
  color: var(--color-red);
}

.help {
  margin-top: -0.5rem;
  margin-bottom: 1rem;
  color: var(--color-gray-1);
}

.label {
  margin-bottom: 0.5rem;
  font-weight: 700;
  color: var(--color-gray-2);
}

.description {
  margin-top: 0.25rem;

  font-size: 0.9375rem;
  line-height: 1.25;
  color: var(--color-gray-1);
  text-align: center;
}

.addressWidget {
  margin-bottom: 1.25rem;
}

.inputReadOnly {
  position: relative;

  display: flex;

  box-sizing: border-box;
  margin-bottom: 1.25rem;
  padding: 0.875rem 0.75rem;
  border: none;
  border-radius: var(--border-radius-default);

  font-size: 1rem;
  font-weight: 600;
  line-height: 1.25rem;
  color: var(--color-black);
  text-align: left;
  word-break: break-all;

  background: var(--color-background-first);
  outline: none;

  &_words {
    word-break: normal !important;
    overflow-wrap: anywhere;
  }
}

.currencySymbol {
  color: var(--color-gray-3);
}

.commentInputWrapper {
  margin-bottom: 0 !important;
}

.sticker {
  margin: 0 auto 1.25rem;

  &_sizeSmall {
    margin: -0.375rem auto 1.25rem;
  }
}

.buttonLoading .buttonText {
  visibility: hidden;
  opacity: 0;
}

.buttonLoading::after {
  content: "";

  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;

  width: 1rem;
  height: 1rem;
  margin: auto;
  border: 0.25rem solid transparent;
  border-top-color: var(--color-white);
  border-radius: 50%;

  animation: button-loading-spinner 1s linear infinite;
}

.savedAddressBubble {
  --offset-y-value: -0.75rem;

  max-height: min(60vh, 11rem);
}

.savedAddressItem {
  cursor: var(--custom-cursor, pointer);

  position: relative;

  display: flex;
  align-items: center;

  padding: 0.75rem 1rem;

  font-size: 0.9375rem;

  &:active {
    transition: none;
  }

  &:hover,
  &:focus-visible {
    text-decoration: none;
    background-color: var(--color-interactive-drop-down-menu-hover);
  }

  @include mixins.separator();

  @media (pointer: coarse) {
    padding: 0.875rem 1rem;
    font-size: 1rem;
  }
}

.savedAddressName {
  overflow: hidden;
  display: flex;
  align-items: baseline;
  margin-inline-end: auto;
}

.savedAddressNameText {
  overflow: hidden;

  font-weight: 600;
  color: var(--color-black);
  text-overflow: ellipsis;
  white-space: nowrap;
}

.iconLedger {
  position: relative;
  top: 0.0625rem;

  margin-inline-start: 0.25rem;

  font-size: 0.8125rem;
  color: var(--color-gray-3)
}

.savedAddressAddress {
  padding-inline-start: 0.5rem;
  font-size: 0.75rem;
  color: var(--color-gray-3);
  white-space: nowrap;

  @include mixins.transition(opacity 150ms);

  .savedAddressDelete:hover + & {
    opacity: 0;
  }

  @media (pointer: coarse) {
    font-size: 0.8125rem;
  }
}

.savedAddressDelete {
  position: absolute;
  z-index: 1;
  top: 50%;
  right: 0.25rem;
  transform: translateY(-50%);

  width: 7rem;
  padding: 0.25rem;

  font-size: 0.8125rem;
  text-align: right;

  opacity: 0;

  @include mixins.transition("opacity 150ms, color 150ms");

  &:hover {
    opacity: 1;
  }

  /* stylelint-disable-next-line order/order, at-rule-empty-line-before */
  @include mixins.respond-below(xs) {
    display: none;
  }
}

.savedAddressDeleteInner {
  cursor: var(--custom-cursor, pointer);
  color: var(--color-gray-3);

  &:hover,
  &:active {
    color: var(--color-red);
  }

  &:active {
    // Optimization
    transition: none;
  }
}

.savedAddressDeleteIcon {
  display: none;

  /* stylelint-disable-next-line order/order, at-rule-empty-line-before */
  @include mixins.respond-below(xs) {
    display: block;
    margin-inline-start: 0.25rem;
    font-size: 1.25rem;
  }
}

.chainIcon {
  margin-right: 0.0625rem;
  vertical-align: -0.1875rem;
}

.inputStatic {
  /* Default input padding minus 1px accounted for border width */
  padding: 0.5rem 0.6875rem 0.375rem;
  border: 1px solid var(--color-separator-input-stroke);
  background: transparent;
}

.inputWithIcon {
  padding-right: 3.625rem;
}

textarea.inputStatic {
  /* default input padding minus 1px accounted for border width */
  padding: 0.875rem 0.75rem 0.8125rem;
}

.footer {
  display: flex;
  flex-direction: column;
  gap: 1rem;
  align-items: stretch;

  margin-top: auto;
  padding-top: 1.5rem;

  &_shifted {
    margin-top: -0.875rem;
  }
}

.buttons {
  display: grid;
  grid-auto-flow: column;
  grid-template-columns: repeat(auto-fit, minmax(max-content, 1fr));
  gap: 1rem;
}

.button {
  overflow: hidden;
  // The default value for the button in this component is `flex`,
  // but with `flex` doesn't work `text-overflow: ellipsis`.
  display: inline-block !important;

  width: 100%;
  min-width: 4rem !important;
  max-width: 100% !important;
  padding: 0.5rem !important;

  text-overflow: ellipsis;
}

@keyframes button-loading-spinner {
  from {
    transform: rotate(0turn);
  }

  to {
    transform: rotate(1turn);
  }
}

.warningTooltipContainer {
  max-width: 18.9375rem !important;
}

.transactionBanner {
  align-self: center;
  margin-bottom: 2rem;

  @media (max-height: 43.5rem) {
    margin-bottom: 1rem;
  }
}

.infoBox, .burnWarning, .error {
  align-self: center;

  width: 100%;
  padding: 0.5rem 0.75rem;
  border-radius: var(--border-radius-buttons);

  font-size: 0.9375rem;
  font-weight: 600;
  line-height: 1.3125rem;
  text-align: center;

  background-color: var(--color-background-first);
}

.infoBox {
  margin: 1rem 0;
}

.infoBox ~ .infoBox {
  margin-top: 0;
}

.burnWarning, .error {
  color: var(--color-transaction-amount-red-text);
  background-color: var(--color-transaction-amount-red-bg);
}

.spinner {
  margin: 2rem auto;
}

.formSlide {
  display: flex;
  flex-direction: column;
  background: var(--background-color); // To ensure a glitch-free "semiFade" transition

  &_static {
    height: auto !important;
  }
}
