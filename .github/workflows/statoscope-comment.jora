// Original: https://github.com/statoscope/statoscope.tech/blob/main/.github/workflows/statoscope-comment.jora

// variables
$after: resolveInputFile();
$inputCompilation: $after.compilations.pick();
$inputInitialCompilation: $after.compilations.chunks.filter(<initial>);
$before: resolveReferenceFile();
$referenceCompilation: $before.compilations.pick();
$referenceInitialCompilation: $before.compilations.chunks.filter(<initial>);

// helpers
$getSizeByChunks: => files.(getAssetSize($$, true)).reduce(=> size + $$, 0);

// output
{
  initialSize: {
    $after: $inputInitialCompilation.$getSizeByChunks($inputCompilation.hash);
    $before: $referenceInitialCompilation.$getSizeByChunks($referenceCompilation.hash);
    $after,
    $before,
    diff: {
      value: $after - $before,
      percent: $after.percentFrom($before, 2),
      formatted: { type: 'size', a: $before, b: $after } | formatDiff() + ` (${b.percentFrom(a, 2)}%)`,
    }
  },
  bundleSize: {
    $after: $inputCompilation.chunks.$getSizeByChunks($inputCompilation.hash);
    $before: $referenceCompilation.chunks.$getSizeByChunks($referenceCompilation.hash);
    $after,
    $before,
    diff: {
      value: $after - $before,
      percent: $after.percentFrom($before, 2),
      formatted: { type: 'size', a: $before, b: $after } | formatDiff() + ` (${b.percentFrom(a, 2)}%)`,
    }
  },
  validation: {
    $messages: $after.compilations.[hash].(hash.validation_getItems());
    $messages,
    total: $messages.size()
  }
}
