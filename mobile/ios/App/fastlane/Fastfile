default_platform(:ios)

$package_json_path = '../../../../package.json'
$workspace_path = 'App.xcworkspace'
$project_path = '../App.xcodeproj/project.pbxproj'
$plist_path = '../../App/App/Info.plist'

$is_air = ENV['IS_AIR_APP'] == '1'
$team_id = CredentialsManager::AppfileConfig.try_fetch_value(:team_id)
$app_identifier = CredentialsManager::AppfileConfig.try_fetch_value(:app_identifier)
$profile_name = 'MyTonWallet Production profile'
$scheme = 'MyTonWallet'
$app_identifier_widget = "#{$app_identifier}.AirWidget"
$profile_name_widget = 'MyTonWallet Production profile - Widget'
$scheme_widget = 'AirWidgetExtension'

if $is_air
  $profile_name = 'MyTonWallet Air 4'
  $scheme = 'MyTonWalletAir'
end

puts "$is_air: #{$is_air}"
puts "$app_identifier: #{$app_identifier}"
puts "$profile_name: #{$profile_name}"
puts "$scheme: #{$scheme}"
puts "$app_identifier_widget: #{$app_identifier_widget}"
puts "$profile_name_widget: #{$profile_name_widget}"
puts "$scheme_widget: #{$scheme_widget}"

$project_data = nil
$plist_data = nil

def read_files
  $project_data = File.read($project_path)
  $plist_data = File.read($plist_path)
end

def restore_files
  File.write($project_path, $project_data)
  File.write($plist_path, $plist_data)
end

def update_version_and_build_number
  version = JSON.parse(File.read($package_json_path))["version"]
  production_build_number = 0
  begin
    production_build_number = app_store_build_number(version: version, initial_build_number: 0, live: true).to_i
  rescue
  end
  beta_build_number = latest_testflight_build_number(version: version, initial_build_number: 0)
  build_number = [production_build_number, beta_build_number].max() + 1

  increment_version_number(version_number: version)
  increment_build_number(skip_info_plist: true, build_number: build_number)

  return version, build_number
end

platform :ios do
  desc "Push a new beta build to TestFlight"

  before_all do |lane|
    read_files

    app_store_connect_api_key(
      key_id: "TL49GJ73DP",
      issuer_id: "519080b4-bc5f-4d06-a889-a69254108348",
      key_filepath: "./AuthKey.p8",
      duration: 1200,
      in_house: false
    )

    update_code_signing_settings(
      path: "App.xcodeproj",
      use_automatic_signing: false,
      profile_name: $profile_name,
      sdk: "iphoneos*",
      team_id: $team_id,
      targets: [$scheme],
      code_sign_identity: "iPhone Distribution"
    )

    update_code_signing_settings(
      path: "App.xcodeproj",
      use_automatic_signing: false,
      profile_name: $profile_name_widget,
      sdk: "iphoneos*",
      team_id: $team_id,
      targets: [$scheme_widget],
      code_sign_identity: "iPhone Distribution"
    )
  end

  lane :beta do
    update_version_and_build_number

    build_app(
      workspace: $workspace_path,
      scheme: $scheme,
      export_method: "app-store",
      export_options: {
        provisioningProfiles: {
          $app_identifier => $profile_name,
          $app_identifier_widget => $profile_name_widget,
        }
      }
    )

    changelog_from_git_commits(merge_commit_filtering: "exclude_merges", commits_count: 3)
    upload_to_testflight(
      distribute_external: true,
      groups: "MTW external group",
      beta_app_description: "Bug fixes and performance improvements"
    )
  end

  lane :release do
    version, build_number = update_version_and_build_number

    changelog_path = "../../../../changelogs/" + version + ".txt"
    if !File.exist?(changelog_path)
      raise "There is no changelog for version " + version
    end

    changelog = File.read(changelog_path)

    build_app(
      workspace: $workspace_path,
      scheme: $scheme,
      export_method: "app-store",
      export_options: {
        provisioningProfiles: {
          $app_identifier => $profile_name,
          $app_identifier_widget => $profile_name_widget,
        }
      }
    )

    upload_to_app_store(
      skip_screenshots: true,
      skip_metadata: false,
      precheck_include_in_app_purchases: false,
      submit_for_review: true,
      submission_information: {
        add_id_info_uses_idfa: false
      },
      force: true,
      release_notes: {
        "default" => changelog,
        "en-US" => changelog,
      }
    )
  end

  after_all do |lane|
    restore_files
  end

  error do |lane, exception|
    restore_files
  end

end
